<?xml version="1.0" encoding="utf-8"?>
<search>
  
    <entry>
      <title><![CDATA[Python中的递归]]></title>
      <url>/2017/05/25/python-recursion/</url>
      <content type="html"><![CDATA[<h2 id="闲话">闲话</h2>
<p>从去年年初就想找时间学一下Python这门语言，一直到前不久才付诸实践，通过自己看书以及网上的很多资料，也算是在一步步的进行中，个人博客也是在自己慢慢摸索着直到最近才有空搞出个框架，借助GitHub上的开源模板，也算是有些样子，废话少说，接下来开始记录我在学习Python这门语言上遇到的一些自认为比较重要的知识点</p>
<h2 id="正文">正文</h2>
<p>我们都知道，函数内部可以调用其自身，那么这就是递归函数，具体概念不赘述，有需要的请移步<a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431756044276a15558a759ec43de8e30eb0ed169fb11000">廖雪峰的官方网站</a>，这里着重以汉诺塔算法记录一下Python的递归函数，加深理解：</p>

<p>有3个柱子A、B、C，n个盘子由大到小堆叠在A柱，现在需要将A柱的盘子借助B柱全部移动到C柱，并且在C柱子由大到小堆叠。</p>

<p>编写函数<code class="highlighter-rouge">hanoi(n, a, b, c)</code>参数<code class="highlighter-rouge">n</code>代表A柱的盘子数量，<code class="highlighter-rouge">a</code> <code class="highlighter-rouge">b</code> <code class="highlighter-rouge">c</code>分别代表三个柱子，下面开始实现函数：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">hanoi</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="p">):</span>			<span class="c">#实现函数</span>
    <span class="k">if</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>				<span class="c">#当盘子数量n为1时，此时不需要借助B移动</span>
        <span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="s">'-&gt;'</span><span class="p">,</span><span class="n">c</span><span class="p">)</span>		
    <span class="k">else</span><span class="p">:</span>					
        <span class="n">hanoi</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">a</span><span class="p">,</span> <span class="n">c</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>		<span class="c">#将n个盘子借助B移动至C，那首先需要将n-1个盘子借助C移动至B</span>
        <span class="n">hanoi</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="p">)</span>		<span class="c">#将n个盘子除去n-1个移动至B的盘子，此时为n-(n-1)盘子移动至C</span>
        <span class="n">hanoi</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">a</span><span class="p">,</span> <span class="n">c</span><span class="p">)</span>		<span class="c">#最后一步，将在B柱上的n-1个盘子通过A移动至C</span>
<span class="n">hanoi</span><span class="p">(</span><span class="mi">3</span> <span class="p">,</span><span class="s">'A'</span><span class="p">,</span><span class="s">'B'</span><span class="p">,</span><span class="s">'C'</span><span class="p">)</span>
</code></pre></div></div>

<p>运行代码，期望的输出结果：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">A</span> <span class="o">-&gt;</span> <span class="n">C</span>
<span class="n">A</span> <span class="o">-&gt;</span> <span class="n">B</span>
<span class="n">C</span> <span class="o">-&gt;</span> <span class="n">B</span>
<span class="n">A</span> <span class="o">-&gt;</span> <span class="n">C</span>
<span class="n">B</span> <span class="o">-&gt;</span> <span class="n">A</span>
<span class="n">B</span> <span class="o">-&gt;</span> <span class="n">C</span>
<span class="n">A</span> <span class="o">-&gt;</span> <span class="n">C</span>
</code></pre></div></div>

<p>通过递归函数，可以简单的实现汉诺塔算法。</p>
]]></content>
      <categories>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
</search>
